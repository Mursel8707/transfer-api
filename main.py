from fastapi import FastAPI
from pydantic import BaseModel
import httpx
import os
from dotenv import load_dotenv

load_dotenv()

app = FastAPI()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

route_prices = {
    ("Antalya Havaliman", "Kemer(Beldibi)"): 50,
    ("Antalya Havaliman", "Kemer(G√∂yn√ºk)"): 50,
    ("Antalya Havaliman", "Antalya(AVM)"): 50,
    ("Kemer(Beldibi)", "Antalya(AVM)"): 100,
    ("Kemer(G√∂yn√ºk)", "Antalya(AVM)"): 100,
    ("Alanya(Mahmutlar)", "Antalya(AVM)"): 200
    # ... –¥–æ–±–∞–≤—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∑–¥–µ—Å—å –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–æ–º
}

@app.get("/")
def root():
    return {"message": "Transfer API is running"}

class PriceByRegionRequest(BaseModel):
    from_address: str
    to_address: str

@app.post("/get-price")
def get_price(data: PriceByRegionRequest):
    key = (data.from_address, data.to_address)
    price = route_prices.get(key)
    if price is None:
        return {"error": "–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"}
    return {"price": price}

class BookingRequest(BaseModel):
    from_address: str
    to_address: str
    travel_date: str
    adults: int
    children: int
    comment: str = ""
    need_wifi: bool = False
    russian_driver: bool = False
    promo_code: str = ""

@app.post("/book-transfer")
def book_transfer(data: BookingRequest):
    key = (data.from_address, data.to_address)
    price = route_prices.get(key)
    if price is None:
        return {"error": "–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"}

    message = (
        "üì• –ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:

"
        f"üöó –ú–∞—Ä—à—Ä—É—Ç: {data.from_address} ‚Üí {data.to_address}
"
        f"üìÖ –î–∞—Ç–∞: {data.travel_date}
"
        f"üë®‚Äçüë©‚Äçüëß –í–∑—Ä–æ—Å–ª—ã–µ: {data.adults}, –î–µ—Ç–∏: {data.children}
"
        f"üí∂ –¶–µ–Ω–∞: {price} $
"
        f"üì° Wi-Fi: {'–î–∞' if data.need_wifi else '–ù–µ—Ç'}
"
        f"üá∑üá∫ –†—É—Å. –≤–æ–¥–∏—Ç–µ–ª—å: {'–î–∞' if data.russian_driver else '–ù–µ—Ç'}
"
        f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data.comment or '‚Äî'}"
    )
    send_telegram_message(message)
    return {"status": "success", "message": "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ", "price": price}

def send_telegram_message(text: str):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": text
    }
    try:
        httpx.post(url, json=payload, timeout=10)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", e)
